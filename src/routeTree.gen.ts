/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as EmailVerifyImport } from './routes/email-verify'
import { Route as AppImport } from './routes/app'
import { Route as IndexImport } from './routes/index'
import { Route as AppIndexImport } from './routes/app/index'
import { Route as AppProfileImport } from './routes/app/profile'
import { Route as AppEstimateCalculatorImport } from './routes/app/estimate-calculator'
import { Route as AppClientsImport } from './routes/app/clients'
import { Route as AppClientsIndexImport } from './routes/app/clients/index'
import { Route as AppClientsCreateImport } from './routes/app/clients/create'
import { Route as AppClientsIdImport } from './routes/app/clients/$id'

// Create/Update Routes

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const EmailVerifyRoute = EmailVerifyImport.update({
  id: '/email-verify',
  path: '/email-verify',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileRoute = AppProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any)

const AppEstimateCalculatorRoute = AppEstimateCalculatorImport.update({
  id: '/estimate-calculator',
  path: '/estimate-calculator',
  getParentRoute: () => AppRoute,
} as any)

const AppClientsRoute = AppClientsImport.update({
  id: '/clients',
  path: '/clients',
  getParentRoute: () => AppRoute,
} as any)

const AppClientsIndexRoute = AppClientsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppClientsRoute,
} as any)

const AppClientsCreateRoute = AppClientsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => AppClientsRoute,
} as any)

const AppClientsIdRoute = AppClientsIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => AppClientsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/email-verify': {
      id: '/email-verify'
      path: '/email-verify'
      fullPath: '/email-verify'
      preLoaderRoute: typeof EmailVerifyImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/app/clients': {
      id: '/app/clients'
      path: '/clients'
      fullPath: '/app/clients'
      preLoaderRoute: typeof AppClientsImport
      parentRoute: typeof AppImport
    }
    '/app/estimate-calculator': {
      id: '/app/estimate-calculator'
      path: '/estimate-calculator'
      fullPath: '/app/estimate-calculator'
      preLoaderRoute: typeof AppEstimateCalculatorImport
      parentRoute: typeof AppImport
    }
    '/app/profile': {
      id: '/app/profile'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileImport
      parentRoute: typeof AppImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppImport
    }
    '/app/clients/$id': {
      id: '/app/clients/$id'
      path: '/$id'
      fullPath: '/app/clients/$id'
      preLoaderRoute: typeof AppClientsIdImport
      parentRoute: typeof AppClientsImport
    }
    '/app/clients/create': {
      id: '/app/clients/create'
      path: '/create'
      fullPath: '/app/clients/create'
      preLoaderRoute: typeof AppClientsCreateImport
      parentRoute: typeof AppClientsImport
    }
    '/app/clients/': {
      id: '/app/clients/'
      path: '/'
      fullPath: '/app/clients/'
      preLoaderRoute: typeof AppClientsIndexImport
      parentRoute: typeof AppClientsImport
    }
  }
}

// Create and export the route tree

interface AppClientsRouteChildren {
  AppClientsIdRoute: typeof AppClientsIdRoute
  AppClientsCreateRoute: typeof AppClientsCreateRoute
  AppClientsIndexRoute: typeof AppClientsIndexRoute
}

const AppClientsRouteChildren: AppClientsRouteChildren = {
  AppClientsIdRoute: AppClientsIdRoute,
  AppClientsCreateRoute: AppClientsCreateRoute,
  AppClientsIndexRoute: AppClientsIndexRoute,
}

const AppClientsRouteWithChildren = AppClientsRoute._addFileChildren(
  AppClientsRouteChildren,
)

interface AppRouteChildren {
  AppClientsRoute: typeof AppClientsRouteWithChildren
  AppEstimateCalculatorRoute: typeof AppEstimateCalculatorRoute
  AppProfileRoute: typeof AppProfileRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppClientsRoute: AppClientsRouteWithChildren,
  AppEstimateCalculatorRoute: AppEstimateCalculatorRoute,
  AppProfileRoute: AppProfileRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/email-verify': typeof EmailVerifyRoute
  '/sign-in': typeof SignInRoute
  '/app/clients': typeof AppClientsRouteWithChildren
  '/app/estimate-calculator': typeof AppEstimateCalculatorRoute
  '/app/profile': typeof AppProfileRoute
  '/app/': typeof AppIndexRoute
  '/app/clients/$id': typeof AppClientsIdRoute
  '/app/clients/create': typeof AppClientsCreateRoute
  '/app/clients/': typeof AppClientsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/email-verify': typeof EmailVerifyRoute
  '/sign-in': typeof SignInRoute
  '/app/estimate-calculator': typeof AppEstimateCalculatorRoute
  '/app/profile': typeof AppProfileRoute
  '/app': typeof AppIndexRoute
  '/app/clients/$id': typeof AppClientsIdRoute
  '/app/clients/create': typeof AppClientsCreateRoute
  '/app/clients': typeof AppClientsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/email-verify': typeof EmailVerifyRoute
  '/sign-in': typeof SignInRoute
  '/app/clients': typeof AppClientsRouteWithChildren
  '/app/estimate-calculator': typeof AppEstimateCalculatorRoute
  '/app/profile': typeof AppProfileRoute
  '/app/': typeof AppIndexRoute
  '/app/clients/$id': typeof AppClientsIdRoute
  '/app/clients/create': typeof AppClientsCreateRoute
  '/app/clients/': typeof AppClientsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/email-verify'
    | '/sign-in'
    | '/app/clients'
    | '/app/estimate-calculator'
    | '/app/profile'
    | '/app/'
    | '/app/clients/$id'
    | '/app/clients/create'
    | '/app/clients/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/email-verify'
    | '/sign-in'
    | '/app/estimate-calculator'
    | '/app/profile'
    | '/app'
    | '/app/clients/$id'
    | '/app/clients/create'
    | '/app/clients'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/email-verify'
    | '/sign-in'
    | '/app/clients'
    | '/app/estimate-calculator'
    | '/app/profile'
    | '/app/'
    | '/app/clients/$id'
    | '/app/clients/create'
    | '/app/clients/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  EmailVerifyRoute: typeof EmailVerifyRoute
  SignInRoute: typeof SignInRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  EmailVerifyRoute: EmailVerifyRoute,
  SignInRoute: SignInRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/email-verify",
        "/sign-in"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/clients",
        "/app/estimate-calculator",
        "/app/profile",
        "/app/"
      ]
    },
    "/email-verify": {
      "filePath": "email-verify.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/app/clients": {
      "filePath": "app/clients.tsx",
      "parent": "/app",
      "children": [
        "/app/clients/$id",
        "/app/clients/create",
        "/app/clients/"
      ]
    },
    "/app/estimate-calculator": {
      "filePath": "app/estimate-calculator.tsx",
      "parent": "/app"
    },
    "/app/profile": {
      "filePath": "app/profile.tsx",
      "parent": "/app"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/app/clients/$id": {
      "filePath": "app/clients/$id.tsx",
      "parent": "/app/clients"
    },
    "/app/clients/create": {
      "filePath": "app/clients/create.tsx",
      "parent": "/app/clients"
    },
    "/app/clients/": {
      "filePath": "app/clients/index.tsx",
      "parent": "/app/clients"
    }
  }
}
ROUTE_MANIFEST_END */
