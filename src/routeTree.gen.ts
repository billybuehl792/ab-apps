/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PlaygroundIndexImport } from './routes/playground/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as EstimateCalculatorIndexImport } from './routes/estimate-calculator/index'
import { Route as ClientsIndexImport } from './routes/clients/index'
import { Route as ClientsCreateImport } from './routes/clients/create'
import { Route as ClientsIdImport } from './routes/clients/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PlaygroundIndexRoute = PlaygroundIndexImport.update({
  id: '/playground/',
  path: '/playground/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const EstimateCalculatorIndexRoute = EstimateCalculatorIndexImport.update({
  id: '/estimate-calculator/',
  path: '/estimate-calculator/',
  getParentRoute: () => rootRoute,
} as any)

const ClientsIndexRoute = ClientsIndexImport.update({
  id: '/clients/',
  path: '/clients/',
  getParentRoute: () => rootRoute,
} as any)

const ClientsCreateRoute = ClientsCreateImport.update({
  id: '/clients/create',
  path: '/clients/create',
  getParentRoute: () => rootRoute,
} as any)

const ClientsIdRoute = ClientsIdImport.update({
  id: '/clients/$id',
  path: '/clients/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/clients/$id': {
      id: '/clients/$id'
      path: '/clients/$id'
      fullPath: '/clients/$id'
      preLoaderRoute: typeof ClientsIdImport
      parentRoute: typeof rootRoute
    }
    '/clients/create': {
      id: '/clients/create'
      path: '/clients/create'
      fullPath: '/clients/create'
      preLoaderRoute: typeof ClientsCreateImport
      parentRoute: typeof rootRoute
    }
    '/clients/': {
      id: '/clients/'
      path: '/clients'
      fullPath: '/clients'
      preLoaderRoute: typeof ClientsIndexImport
      parentRoute: typeof rootRoute
    }
    '/estimate-calculator/': {
      id: '/estimate-calculator/'
      path: '/estimate-calculator'
      fullPath: '/estimate-calculator'
      preLoaderRoute: typeof EstimateCalculatorIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/playground/': {
      id: '/playground/'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof PlaygroundIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/clients/$id': typeof ClientsIdRoute
  '/clients/create': typeof ClientsCreateRoute
  '/clients': typeof ClientsIndexRoute
  '/estimate-calculator': typeof EstimateCalculatorIndexRoute
  '/login': typeof LoginIndexRoute
  '/playground': typeof PlaygroundIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/clients/$id': typeof ClientsIdRoute
  '/clients/create': typeof ClientsCreateRoute
  '/clients': typeof ClientsIndexRoute
  '/estimate-calculator': typeof EstimateCalculatorIndexRoute
  '/login': typeof LoginIndexRoute
  '/playground': typeof PlaygroundIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/clients/$id': typeof ClientsIdRoute
  '/clients/create': typeof ClientsCreateRoute
  '/clients/': typeof ClientsIndexRoute
  '/estimate-calculator/': typeof EstimateCalculatorIndexRoute
  '/login/': typeof LoginIndexRoute
  '/playground/': typeof PlaygroundIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/clients/$id'
    | '/clients/create'
    | '/clients'
    | '/estimate-calculator'
    | '/login'
    | '/playground'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/clients/$id'
    | '/clients/create'
    | '/clients'
    | '/estimate-calculator'
    | '/login'
    | '/playground'
  id:
    | '__root__'
    | '/'
    | '/clients/$id'
    | '/clients/create'
    | '/clients/'
    | '/estimate-calculator/'
    | '/login/'
    | '/playground/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ClientsIdRoute: typeof ClientsIdRoute
  ClientsCreateRoute: typeof ClientsCreateRoute
  ClientsIndexRoute: typeof ClientsIndexRoute
  EstimateCalculatorIndexRoute: typeof EstimateCalculatorIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  PlaygroundIndexRoute: typeof PlaygroundIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ClientsIdRoute: ClientsIdRoute,
  ClientsCreateRoute: ClientsCreateRoute,
  ClientsIndexRoute: ClientsIndexRoute,
  EstimateCalculatorIndexRoute: EstimateCalculatorIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  PlaygroundIndexRoute: PlaygroundIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/clients/$id",
        "/clients/create",
        "/clients/",
        "/estimate-calculator/",
        "/login/",
        "/playground/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/clients/$id": {
      "filePath": "clients/$id.tsx"
    },
    "/clients/create": {
      "filePath": "clients/create.tsx"
    },
    "/clients/": {
      "filePath": "clients/index.tsx"
    },
    "/estimate-calculator/": {
      "filePath": "estimate-calculator/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/playground/": {
      "filePath": "playground/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
